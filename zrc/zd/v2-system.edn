{:ns zd.v2-system
 :import #{zen-web zd}

 db
 {:zen/tags #{zen/schema zen/engine}
  :zen/state-key :zendoc-test
  :type zen/map}

 zendoc
 {:zen/tags #{zen/start zd/config}
  :engine db
  :paths ["test/zd/tdocs"]
  :layout zd/sidebar}

 serve-static
 {:zen/tags #{zen/op zen-web/op}
  :engine zen-web.engines/serve-static
  :serve ["src"]}

 to-customers
 {:zen/tags #{zen/op zen-web/op}
  :engine zen-web.engines/redirect
  :to "/customers"}

 append-doc
 {:zen/tags #{zen-web/middleware zen/op zen-web/op}
  :zen/desc "resolve page from route-params to zen document"
  :dir #{:in}}

 render-doc
 {:zen/tags #{zen/op zen-web/op}}

 zendoc-mw
 {:zen/tags #{zen/schema zen/tag}
  :type zen/map
  :keys {:zendoc-config {:type zen/symbol
                         :tags #{zd/config}}}}

 append-config
 {:zen/tags #{zen-web/middleware zen/op zen-web/op zendoc-mw}
  :zen/desc "mount zendoc config from ztx"
  :dir #{:in}
  ;; TODO use zen binding
  :zendoc-config zendoc}

 api
 {:zen/tags #{zen-web/api}
  :engine zen-web/routemap
  :GET to-customers
  ;; TODO move zen web defaults to zen web core
  :mw [zen-web/defaults]
  [:id] {:mw [append-config zd/dev-reload append-doc zd/layout]
         :GET render-doc}
  "static" {:* {:GET serve-static}}}

 http
 {:zen/tags #{zen/start zen-web/http}
  :engine zen-web/httpkit
  :port 4444
  :api api}

 system
 {:zen/tags #{zen/system}
  :start [zendoc http]}}
